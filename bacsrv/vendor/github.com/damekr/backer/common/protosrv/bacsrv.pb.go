// Code generated by protoc-gen-go.
// source: protosrv/bacsrv.proto
// DO NOT EDIT!

/*
Package protosrv is a generated protocol buffer package.

It is generated from these files:
	protosrv/bacsrv.proto

It has these top-level messages:
	HelloRequest
	HelloReply
*/
package protosrv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// The request message contains a hostname of requester
type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The response for hello contains a hostname of replayer
type HelloReply struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloReply) Reset()                    { *m = HelloReply{} }
func (m *HelloReply) String() string            { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()               {}
func (*HelloReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "protosrv.HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "protosrv.HelloReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bacsrv service

type BacsrvClient interface {
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type bacsrvClient struct {
	cc *grpc.ClientConn
}

func NewBacsrvClient(cc *grpc.ClientConn) BacsrvClient {
	return &bacsrvClient{cc}
}

func (c *bacsrvClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := grpc.Invoke(ctx, "/protosrv.Bacsrv/SayHello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bacsrv service

type BacsrvServer interface {
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterBacsrvServer(s *grpc.Server, srv BacsrvServer) {
	s.RegisterService(&_Bacsrv_serviceDesc, srv)
}

func _Bacsrv_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosrv.Bacsrv/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bacsrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protosrv.Bacsrv",
	HandlerType: (*BacsrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Bacsrv_SayHello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protosrv/bacsrv.proto",
}

func init() { proto.RegisterFile("protosrv/bacsrv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 130 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2d, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0x2e, 0x2a, 0xd3, 0x4f, 0x4a, 0x4c, 0x2e, 0x2e, 0x2a, 0xd3, 0x03, 0xf3, 0x85, 0x38,
	0x60, 0xc2, 0x4a, 0x4a, 0x5c, 0x3c, 0x1e, 0xa9, 0x39, 0x39, 0xf9, 0x41, 0xa9, 0x85, 0xa5, 0xa9,
	0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x60, 0xb6, 0x92, 0x02, 0x17, 0x17, 0x54, 0x4d, 0x41, 0x4e, 0x25, 0x36, 0x15, 0x46, 0x2e,
	0x5c, 0x6c, 0x4e, 0x60, 0xf3, 0x85, 0xac, 0xb8, 0x38, 0x82, 0x13, 0x2b, 0xc1, 0xca, 0x85, 0xc4,
	0xf4, 0x60, 0xd6, 0xe8, 0x21, 0xdb, 0x21, 0x25, 0x82, 0x21, 0x5e, 0x90, 0x53, 0xa9, 0xc4, 0x90,
	0xc4, 0x06, 0x16, 0x36, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x40, 0xf3, 0x09, 0xb5, 0x00,
	0x00, 0x00,
}
