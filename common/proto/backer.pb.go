// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/backer.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/backer.proto

It has these top-level messages:
	PingRequest
	PingResponse
	BackupRequest
	BackupResponse
	BaclntBackupResponse
	BacsrvBackupResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	Ip string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto1.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto1.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type BackupRequest struct {
	Ip    string   `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Paths []string `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto1.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BackupRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BackupRequest) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type BackupResponse struct {
	BacsrvBackupResponse *BacsrvBackupResponse `protobuf:"bytes,1,opt,name=bacsrvBackupResponse" json:"bacsrvBackupResponse,omitempty"`
	BaclntBackupResponse *BaclntBackupResponse `protobuf:"bytes,2,opt,name=baclntBackupResponse" json:"baclntBackupResponse,omitempty"`
}

func (m *BackupResponse) Reset()                    { *m = BackupResponse{} }
func (m *BackupResponse) String() string            { return proto1.CompactTextString(m) }
func (*BackupResponse) ProtoMessage()               {}
func (*BackupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BackupResponse) GetBacsrvBackupResponse() *BacsrvBackupResponse {
	if m != nil {
		return m.BacsrvBackupResponse
	}
	return nil
}

func (m *BackupResponse) GetBaclntBackupResponse() *BaclntBackupResponse {
	if m != nil {
		return m.BaclntBackupResponse
	}
	return nil
}

type BaclntBackupResponse struct {
	Validpaths []string `protobuf:"bytes,1,rep,name=validpaths" json:"validpaths,omitempty"`
}

func (m *BaclntBackupResponse) Reset()                    { *m = BaclntBackupResponse{} }
func (m *BaclntBackupResponse) String() string            { return proto1.CompactTextString(m) }
func (*BaclntBackupResponse) ProtoMessage()               {}
func (*BaclntBackupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BaclntBackupResponse) GetValidpaths() []string {
	if m != nil {
		return m.Validpaths
	}
	return nil
}

type BacsrvBackupResponse struct {
	Backupstatus bool `protobuf:"varint,1,opt,name=backupstatus" json:"backupstatus,omitempty"`
}

func (m *BacsrvBackupResponse) Reset()                    { *m = BacsrvBackupResponse{} }
func (m *BacsrvBackupResponse) String() string            { return proto1.CompactTextString(m) }
func (*BacsrvBackupResponse) ProtoMessage()               {}
func (*BacsrvBackupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BacsrvBackupResponse) GetBackupstatus() bool {
	if m != nil {
		return m.Backupstatus
	}
	return false
}

func init() {
	proto1.RegisterType((*PingRequest)(nil), "proto.PingRequest")
	proto1.RegisterType((*PingResponse)(nil), "proto.PingResponse")
	proto1.RegisterType((*BackupRequest)(nil), "proto.BackupRequest")
	proto1.RegisterType((*BackupResponse)(nil), "proto.BackupResponse")
	proto1.RegisterType((*BaclntBackupResponse)(nil), "proto.BaclntBackupResponse")
	proto1.RegisterType((*BacsrvBackupResponse)(nil), "proto.BacsrvBackupResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bacsrv service

type BacsrvClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error)
}

type bacsrvClient struct {
	cc *grpc.ClientConn
}

func NewBacsrvClient(cc *grpc.ClientConn) BacsrvClient {
	return &bacsrvClient{cc}
}

func (c *bacsrvClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/proto.Bacsrv/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bacsrvClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error) {
	out := new(BackupResponse)
	err := grpc.Invoke(ctx, "/proto.Bacsrv/Backup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bacsrv service

type BacsrvServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Backup(context.Context, *BackupRequest) (*BackupResponse, error)
}

func RegisterBacsrvServer(s *grpc.Server, srv BacsrvServer) {
	s.RegisterService(&_Bacsrv_serviceDesc, srv)
}

func _Bacsrv_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bacsrv/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bacsrv_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Bacsrv/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bacsrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Bacsrv",
	HandlerType: (*BacsrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Bacsrv_Ping_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Bacsrv_Backup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/backer.proto",
}

func init() { proto1.RegisterFile("proto/backer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 273 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4e, 0xc2, 0x40,
	0x10, 0x86, 0x6d, 0x15, 0x94, 0x01, 0x39, 0x8c, 0x35, 0x21, 0x18, 0x0d, 0xd9, 0x53, 0x4f, 0x18,
	0x31, 0x6a, 0xe2, 0x91, 0x17, 0xd0, 0xec, 0x1b, 0x6c, 0xeb, 0x06, 0x9b, 0x62, 0xbb, 0x76, 0xb6,
	0x3c, 0x98, 0x4f, 0x68, 0x9c, 0xdd, 0x06, 0x5a, 0xea, 0xa9, 0x99, 0xbf, 0xf3, 0xfd, 0xfb, 0xff,
	0x19, 0x40, 0x53, 0x95, 0xb6, 0xbc, 0x4f, 0x54, 0x9a, 0xeb, 0x6a, 0xc9, 0x03, 0x0e, 0xf8, 0x23,
	0x6e, 0x61, 0xfc, 0x9e, 0x15, 0x1b, 0xa9, 0xbf, 0x6b, 0x4d, 0x16, 0xa7, 0x10, 0x66, 0x66, 0x16,
	0x2c, 0x82, 0x78, 0x24, 0xc3, 0xcc, 0x88, 0x18, 0x26, 0xee, 0x37, 0x99, 0xb2, 0x20, 0x8d, 0x33,
	0x38, 0xff, 0xd2, 0x44, 0x6a, 0xa3, 0xfd, 0x52, 0x33, 0x8a, 0x27, 0xb8, 0x5c, 0xab, 0x34, 0xaf,
	0xcd, 0x3f, 0x56, 0x18, 0xc1, 0xc0, 0x28, 0xfb, 0x49, 0xb3, 0x70, 0x71, 0x1a, 0x8f, 0xa4, 0x1b,
	0xc4, 0x4f, 0x00, 0xd3, 0x86, 0xf3, 0x6f, 0xbc, 0x41, 0x94, 0xa8, 0x94, 0xaa, 0x5d, 0x5b, 0x67,
	0xab, 0xf1, 0xea, 0xc6, 0xe5, 0x5f, 0xae, 0x7b, 0x56, 0x64, 0x2f, 0xe8, 0x0d, 0xb7, 0x85, 0xed,
	0x18, 0x86, 0x5d, 0xc3, 0xa3, 0x15, 0xd9, 0x0b, 0x8a, 0x67, 0x88, 0xfa, 0xb6, 0xf1, 0x0e, 0x60,
	0xa7, 0xb6, 0xd9, 0x87, 0xeb, 0x19, 0x70, 0xcf, 0x03, 0x45, 0xbc, 0x32, 0x77, 0x1c, 0x50, 0xc0,
	0x24, 0x61, 0x85, 0xac, 0xb2, 0x35, 0x71, 0xd3, 0x0b, 0xd9, 0xd2, 0x56, 0x16, 0x86, 0x8e, 0xc5,
	0x07, 0x38, 0xfb, 0xbb, 0x09, 0xa2, 0x0f, 0x7e, 0x70, 0xbf, 0xf9, 0x55, 0x4b, 0xf3, 0x71, 0x4f,
	0xf0, 0x85, 0xe1, 0xbc, 0x36, 0x18, 0xed, 0xdb, 0xee, 0x6f, 0x35, 0xbf, 0xee, 0xa8, 0x0d, 0x98,
	0x0c, 0x59, 0x7f, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x35, 0x3c, 0x15, 0xf7, 0x42, 0x02, 0x00,
	0x00,
}
