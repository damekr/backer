// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protosrv/bacsrv.proto

/*
Package protosrv is a generated protocol buffer package.

It is generated from these files:
	protosrv/bacsrv.proto

It has these top-level messages:
	PingRequest
	PingResponse
	BackupRequest
	BackupResponse
	RestoreRequest
	RestoreResponse
	ListBackupsRequest
	ListBackupsResponse
*/
package protosrv

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	Ip string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
}

func (m *PingRequest) Reset()                    { *m = PingRequest{} }
func (m *PingRequest) String() string            { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()               {}
func (*PingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type PingResponse struct {
	Message string `protobuf:"bytes,1,opt,name=message" json:"message,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PingResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// From  server
type BackupRequest struct {
	Ip    string   `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Paths []string `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *BackupRequest) Reset()                    { *m = BackupRequest{} }
func (m *BackupRequest) String() string            { return proto.CompactTextString(m) }
func (*BackupRequest) ProtoMessage()               {}
func (*BackupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BackupRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BackupRequest) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

// For Cli
type BackupResponse struct {
	Backupstatus bool `protobuf:"varint,1,opt,name=backupstatus" json:"backupstatus,omitempty"`
}

func (m *BackupResponse) Reset()                    { *m = BackupResponse{} }
func (m *BackupResponse) String() string            { return proto.CompactTextString(m) }
func (*BackupResponse) ProtoMessage()               {}
func (*BackupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BackupResponse) GetBackupstatus() bool {
	if m != nil {
		return m.Backupstatus
	}
	return false
}

type RestoreRequest struct {
	Ip    string   `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Paths []string `protobuf:"bytes,2,rep,name=paths" json:"paths,omitempty"`
}

func (m *RestoreRequest) Reset()                    { *m = RestoreRequest{} }
func (m *RestoreRequest) String() string            { return proto.CompactTextString(m) }
func (*RestoreRequest) ProtoMessage()               {}
func (*RestoreRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RestoreRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RestoreRequest) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type RestoreResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *RestoreResponse) Reset()                    { *m = RestoreResponse{} }
func (m *RestoreResponse) String() string            { return proto.CompactTextString(m) }
func (*RestoreResponse) ProtoMessage()               {}
func (*RestoreResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RestoreResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ListBackupsRequest struct {
	ClientName string `protobuf:"bytes,1,opt,name=clientName" json:"clientName,omitempty"`
}

func (m *ListBackupsRequest) Reset()                    { *m = ListBackupsRequest{} }
func (m *ListBackupsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBackupsRequest) ProtoMessage()               {}
func (*ListBackupsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListBackupsRequest) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

type ListBackupsResponse struct {
	ClientName string  `protobuf:"bytes,1,opt,name=clientName" json:"clientName,omitempty"`
	BackupID   []int64 `protobuf:"varint,2,rep,packed,name=backupID" json:"backupID,omitempty"`
}

func (m *ListBackupsResponse) Reset()                    { *m = ListBackupsResponse{} }
func (m *ListBackupsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBackupsResponse) ProtoMessage()               {}
func (*ListBackupsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *ListBackupsResponse) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *ListBackupsResponse) GetBackupID() []int64 {
	if m != nil {
		return m.BackupID
	}
	return nil
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "protosrv.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "protosrv.PingResponse")
	proto.RegisterType((*BackupRequest)(nil), "protosrv.BackupRequest")
	proto.RegisterType((*BackupResponse)(nil), "protosrv.BackupResponse")
	proto.RegisterType((*RestoreRequest)(nil), "protosrv.RestoreRequest")
	proto.RegisterType((*RestoreResponse)(nil), "protosrv.RestoreResponse")
	proto.RegisterType((*ListBackupsRequest)(nil), "protosrv.ListBackupsRequest")
	proto.RegisterType((*ListBackupsResponse)(nil), "protosrv.ListBackupsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bacsrv service

type BacsrvClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error)
	Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error)
	ListBackups(ctx context.Context, in *ListBackupsRequest, opts ...grpc.CallOption) (*ListBackupsResponse, error)
}

type bacsrvClient struct {
	cc *grpc.ClientConn
}

func NewBacsrvClient(cc *grpc.ClientConn) BacsrvClient {
	return &bacsrvClient{cc}
}

func (c *bacsrvClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := grpc.Invoke(ctx, "/protosrv.Bacsrv/Ping", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bacsrvClient) Backup(ctx context.Context, in *BackupRequest, opts ...grpc.CallOption) (*BackupResponse, error) {
	out := new(BackupResponse)
	err := grpc.Invoke(ctx, "/protosrv.Bacsrv/Backup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bacsrvClient) Restore(ctx context.Context, in *RestoreRequest, opts ...grpc.CallOption) (*RestoreResponse, error) {
	out := new(RestoreResponse)
	err := grpc.Invoke(ctx, "/protosrv.Bacsrv/Restore", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bacsrvClient) ListBackups(ctx context.Context, in *ListBackupsRequest, opts ...grpc.CallOption) (*ListBackupsResponse, error) {
	out := new(ListBackupsResponse)
	err := grpc.Invoke(ctx, "/protosrv.Bacsrv/ListBackups", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bacsrv service

type BacsrvServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	Backup(context.Context, *BackupRequest) (*BackupResponse, error)
	Restore(context.Context, *RestoreRequest) (*RestoreResponse, error)
	ListBackups(context.Context, *ListBackupsRequest) (*ListBackupsResponse, error)
}

func RegisterBacsrvServer(s *grpc.Server, srv BacsrvServer) {
	s.RegisterService(&_Bacsrv_serviceDesc, srv)
}

func _Bacsrv_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosrv.Bacsrv/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bacsrv_Backup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).Backup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosrv.Bacsrv/Backup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).Backup(ctx, req.(*BackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bacsrv_Restore_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).Restore(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosrv.Bacsrv/Restore",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).Restore(ctx, req.(*RestoreRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bacsrv_ListBackups_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListBackupsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BacsrvServer).ListBackups(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosrv.Bacsrv/ListBackups",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BacsrvServer).ListBackups(ctx, req.(*ListBackupsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bacsrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protosrv.Bacsrv",
	HandlerType: (*BacsrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Bacsrv_Ping_Handler,
		},
		{
			MethodName: "Backup",
			Handler:    _Bacsrv_Backup_Handler,
		},
		{
			MethodName: "Restore",
			Handler:    _Bacsrv_Restore_Handler,
		},
		{
			MethodName: "ListBackups",
			Handler:    _Bacsrv_ListBackups_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protosrv/bacsrv.proto",
}

func init() { proto.RegisterFile("protosrv/bacsrv.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x51, 0x5f, 0x4f, 0xfa, 0x40,
	0x10, 0xfc, 0x51, 0x7e, 0xf2, 0x67, 0x41, 0x4c, 0x56, 0xc1, 0xda, 0x88, 0x21, 0xf7, 0x84, 0x2f,
	0x98, 0x28, 0xea, 0x93, 0x89, 0x21, 0xbe, 0x98, 0x10, 0xa3, 0xf7, 0x0d, 0x0e, 0x72, 0xc1, 0x06,
	0x69, 0xcf, 0xee, 0x95, 0xcf, 0xe1, 0x47, 0x36, 0x5e, 0xef, 0x4a, 0x2b, 0x12, 0xe3, 0xe3, 0xce,
	0xec, 0xcc, 0xdc, 0xed, 0x40, 0x57, 0x25, 0xb1, 0x8e, 0x29, 0x59, 0x5f, 0xcc, 0xc4, 0x9c, 0x92,
	0xf5, 0xc8, 0xcc, 0xd8, 0x70, 0x30, 0xeb, 0x43, 0xeb, 0x39, 0x8c, 0x16, 0x5c, 0xbe, 0xa7, 0x92,
	0x34, 0x76, 0xc0, 0x0b, 0x95, 0x5f, 0x19, 0x54, 0x86, 0x4d, 0xee, 0x85, 0x8a, 0x0d, 0xa1, 0x9d,
	0xd1, 0xa4, 0xe2, 0x88, 0x24, 0xfa, 0x50, 0x5f, 0x49, 0x22, 0xb1, 0x90, 0x76, 0xc9, 0x8d, 0xec,
	0x1a, 0xf6, 0x27, 0x62, 0xbe, 0x4c, 0xd5, 0x0e, 0x2b, 0x3c, 0x82, 0x3d, 0x25, 0xf4, 0x2b, 0xf9,
	0xde, 0xa0, 0x3a, 0x6c, 0xf2, 0x6c, 0x60, 0x63, 0xe8, 0x38, 0x99, 0x8d, 0x60, 0xd0, 0x9e, 0x19,
	0x84, 0xb4, 0xd0, 0x29, 0x19, 0x87, 0x06, 0x2f, 0x61, 0xec, 0x06, 0x3a, 0x5c, 0x92, 0x8e, 0x13,
	0xf9, 0xb7, 0xb4, 0x73, 0x38, 0xc8, 0x75, 0x36, 0xae, 0x07, 0xb5, 0x42, 0x50, 0x93, 0xdb, 0x89,
	0x8d, 0x01, 0xa7, 0x21, 0xe9, 0xec, 0x71, 0xe4, 0x62, 0xce, 0x00, 0xe6, 0x6f, 0xa1, 0x8c, 0xf4,
	0x93, 0x58, 0xb9, 0x13, 0x14, 0x10, 0xf6, 0x02, 0x87, 0x25, 0x95, 0x0d, 0xf9, 0x45, 0x86, 0x01,
	0x34, 0xb2, 0xff, 0x3d, 0x3e, 0x98, 0x07, 0x57, 0x79, 0x3e, 0x5f, 0x7e, 0x78, 0x50, 0x9b, 0x98,
	0xf2, 0xf0, 0x16, 0xfe, 0x7f, 0xb5, 0x81, 0xdd, 0x91, 0xeb, 0x6f, 0x54, 0x28, 0x2f, 0xe8, 0x7d,
	0x87, 0xb3, 0x74, 0xf6, 0x0f, 0xef, 0x8c, 0xc5, 0x32, 0x55, 0x78, 0xbc, 0xd9, 0x29, 0xd5, 0x15,
	0xf8, 0xdb, 0x44, 0x2e, 0xbf, 0x87, 0xba, 0x3d, 0x1b, 0x16, 0xd6, 0xca, 0x0d, 0x04, 0x27, 0x3f,
	0x30, 0xb9, 0xc3, 0x14, 0x5a, 0x85, 0xbb, 0xe0, 0xe9, 0x66, 0x77, 0xfb, 0xc8, 0x41, 0x7f, 0x07,
	0xeb, 0xdc, 0x66, 0x35, 0xc3, 0x5f, 0x7d, 0x06, 0x00, 0x00, 0xff, 0xff, 0xa9, 0x5a, 0x63, 0x9c,
	0xde, 0x02, 0x00, 0x00,
}
